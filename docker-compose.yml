# docker-compose.deploy.yml
version: '3.8'

volumes:
  userdb_vol:
  productdb_vol:
  orderdb_vol:

networks:
  micro_network:
    name: micro_network

services:
  user-api:
    container_name: cuser-service
#    build:
#      context: user-service
    image: ajitha1234/userservice:latest
    ports:
    - "5001:5001"
    depends_on:
      - user-db
      - datadog
#    entrypoint: flask db init
    networks:
      - micro_network
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      - DD_TRACE_SAMPLE_RATE=0.1
      - DD_ENV=prod
      - DATADOG_SERVICE_NAME=user-service
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "user-service"}]'
    restart: always

  user-db:
    container_name: cuser_dbase
    image: mysql:8
    ports:
    - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pfm_dc_2020
      MYSQL_DATABASE: user
      MYSQL_USER: cloudacademy
      MYSQL_PASSWORD: pfm_2020
    networks:
      - micro_network
    volumes:
    - userdb_vol:/var/lib/mysql
    labels:
      com.datadoghq.ad.logs: '[{"source": "mysql", "service": "user-mysql"}]'

  product-api:
    container_name: cproduct-service
#    build:
#      context: product-service
    image: ajitha1234/productservice
    ports:
    - "5002:5002"
    depends_on:
      - product-db
      - datadog
    networks:
      - micro_network
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_SAMPLE_RATE=0.1
      - DD_ENV=prod
      - DATADOG_SERVICE_NAME=product-service
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "product-service"}]'
    restart: always

  product-db:
    container_name: cproduct_dbase
    image: mysql:8
    ports:
    - "32001:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pfm_dc_2020
      MYSQL_DATABASE: product
      MYSQL_USER: cloudacademy
      MYSQL_PASSWORD: pfm_2020
    networks:
      - micro_network
    volumes:
    - productdb_vol:/var/lib/mysql
    labels:
      com.datadoghq.ad.logs: '[{"source": "mysql", "service": "product-mysql"}]'

  order-api:
    container_name: corder-service
#    build:
#      context: order-service
    image: ajitha1234/orderservice
    ports:
    - "5003:5003"
    depends_on:
      - order-db
      - datadog
    networks:
      - micro_network
    environment:
      - DATADOG_SERVICE_NAME=order-service
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      - DD_TRACE_SAMPLE_RATE=0.1
      - DD_ENV=prod
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "order-service"}]'
    restart: always

  order-db:
    container_name: corder_dbase
    image: mysql:8
    ports:
    - "32002:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pfm_dc_2020
      MYSQL_DATABASE: order
      MYSQL_USER: cloudacademy
      MYSQL_PASSWORD: pfm_2020
    networks:
      - micro_network
    volumes:
    - orderdb_vol:/var/lib/mysql
    labels:
      com.datadoghq.ad.logs: '[{"source": "mysql", "service": "order-mysql"}]'

  frontend-app:
    container_name: cfrontend-app
#    build:
#      context: frontend
    image: ajitha1234/frontend:latest
    ports:
    - "5000:5000"
    networks:
      - micro_network
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      - DD_TRACE_SAMPLE_RATE=0.1
      - DD_ENV=prod
      - DD_RUNTIME_METRICS_ENABLED=true
      - DATADOG_SERVICE_NAME=shop-frontend
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "shop-frontend"}]'
    depends_on:
      - datadog
      - product-api
      - product-db
      - user-api
      - user-db
      - order-api
      - order-db
    restart: always

  datadog:
    container_name: datadog-agent
    image: datadog/agent:latest
    ports:
      - "8126:8126/tcp"
    environment:
      - DD_API_KEY=${KEY}
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:prod'
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
    networks:
      - micro_network
    labels:
      com.datadoghq.ad.logs: '[{"source": "datadog-agent", "service": "datadog-agent"}]'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro